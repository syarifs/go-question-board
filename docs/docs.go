// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/major": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get List of Major, for Administrator only.",
                "tags": [
                    "Major"
                ],
                "summary": "Get All Major",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Major"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Insert New Major, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Major"
                ],
                "summary": "Create New Major",
                "parameters": [
                    {
                        "description": "send request major code and major name",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Major"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/major/{id}/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Delete Major, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Major"
                ],
                "summary": "Delete Major",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "major id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/major/{id}/update": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Update Major, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Major"
                ],
                "summary": "Update Major",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "major id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "send request major code and major name",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Major"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/subject": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get List of Subject, for Administrator only.",
                "tags": [
                    "Subject"
                ],
                "summary": "Get All Subject",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.SubjectWithoutTeacher"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Insert New Subject, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subject"
                ],
                "summary": "Create New Subject",
                "parameters": [
                    {
                        "description": "send request subject code and subject name",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SubjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/subject/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get Subject Details By ID.",
                "tags": [
                    "Subject"
                ],
                "summary": "Get Subject By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "subject id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.Subject"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/subject/{id}/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Delete Subject, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subject"
                ],
                "summary": "Delete Subject",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "subject id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/subject/{id}/update": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Update Subject, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subject"
                ],
                "summary": "Update Subject",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "subject id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "send request subject code and subject name",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SubjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/tag": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get List of Tag, for Administrator only.",
                "tags": [
                    "Tag"
                ],
                "summary": "Get All Tag",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Tag"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Insert New Tag, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Create New Tag",
                "parameters": [
                    {
                        "description": "send request tag code and tag name",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/tag/{id}/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Delete Tag, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Delete Tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "tag id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/tag/{id}/update": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Update Tag, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tag"
                ],
                "summary": "Update Tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "tag id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "send request tag code and tag name",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get List of User, for Administrator only.",
                "tags": [
                    "User"
                ],
                "summary": "Get All User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.UserList"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Insert New User, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create New User",
                "parameters": [
                    {
                        "description": "send request user code and user name",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get User Details By ID, for Administrator only.",
                "tags": [
                    "User"
                ],
                "summary": "Get User By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.UserDetails"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/{id}/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Delete User, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/admin/user/{id}/update": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Update User, for Administrator only.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "send request user code and user name",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login and get Authorization Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "send request email, password",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserDetails"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/quest": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get List of Quest By User ID.",
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Get All Quest",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.QuestList"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Insert New Quest.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Create New Quest",
                "parameters": [
                    {
                        "description": "send quest data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Questionnaire"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/quest/answer": {
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Answer Quest.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Answer Quest",
                "parameters": [
                    {
                        "description": "send answer, quest, and user data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Answer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/quest/available": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get List of Quest with User Tag Filter.",
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Get All Quest with User Tag Filter",
                "parameters": [
                    {
                        "description": "send logged in user data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.AvailableQuestList"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/quest/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get Quest Details By ID.",
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Get Quest Details By ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "quest id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/quest/{id}/delete": {
            "delete": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Delete Quest.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Delete Quest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "quest id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/quest/{id}/response": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get Quest Response By Quest ID.",
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Quest Response By Quest ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "quest id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.QuestResponses"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/quest/{id}/update": {
            "put": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Update Questionnaire.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Update Questionnaire",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "quest id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "send quest data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Questionnaire"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/refresh_token": {
            "post": {
                "description": "Route Path for Get New Access Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Refresh Token",
                "parameters": [
                    {
                        "description": "send request access_token, refresh_token",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Token"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/student/evaluate": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get List of Evaluation Quest with Subject ID and Class.",
                "tags": [
                    "Evaluate"
                ],
                "summary": "Get Evaluate Quest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "class",
                        "name": "class",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "subject id",
                        "name": "subject_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/response.QuestList"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Answer Evaluate Quesition.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Questionnaire"
                ],
                "summary": "Create New Quest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "teacher id",
                        "name": "teacher_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "subject id",
                        "name": "subject_id",
                        "in": "query"
                    },
                    {
                        "description": "send quest data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.Answer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/student/subject": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get List of Student Subject, for Student only.",
                "tags": [
                    "Subject"
                ],
                "summary": "Get Student Subject",
                "parameters": [
                    {
                        "description": "user data for fetch subject",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.SubjectWithTeacher"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/teacher/subject": {
            "get": {
                "security": [
                    {
                        "ApiKey": []
                    }
                ],
                "description": "Route Path for Get List of Teacher Subject, for Teacher only.",
                "tags": [
                    "Subject"
                ],
                "summary": "Get Teacher Subject",
                "parameters": [
                    {
                        "description": "user data for fetch subject",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.MessageData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/response.SubjectWithStudent"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.MessageOnly"
                        }
                    },
                    "417": {
                        "description": "Expectation Failed",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AnswerOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "question_id": {
                    "type": "integer"
                },
                "string_answer": {
                    "type": "string"
                }
            }
        },
        "models.EvaluateTeacher": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "subject": {
                    "$ref": "#/definitions/models.Subject"
                },
                "subject_id": {
                    "type": "integer"
                },
                "teacher_id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.Level": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Major": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Question": {
            "type": "object",
            "properties": {
                "answer_option": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnswerOption"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "questionnaire_id": {
                    "type": "integer"
                },
                "user_response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserAnswer"
                    }
                },
                "with_option": {
                    "type": "integer"
                }
            }
        },
        "models.Questionnaire": {
            "type": "object",
            "properties": {
                "completor": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "creator": {
                    "$ref": "#/definitions/models.User"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Question"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Subject": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "$ref": "#/definitions/models.Major"
                },
                "major_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "student": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "teacher_class": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TeacherSubject"
                    }
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.TeacherSubject": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "subject": {
                    "$ref": "#/definitions/models.Subject"
                },
                "subject_id": {
                    "type": "integer"
                },
                "teacher": {
                    "$ref": "#/definitions/models.User"
                },
                "teacher_id": {
                    "type": "integer"
                }
            }
        },
        "models.Token": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "$ref": "#/definitions/models.Level"
                },
                "level_id": {
                    "type": "integer"
                },
                "major": {
                    "$ref": "#/definitions/models.Major"
                },
                "major_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "subject": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Subject"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "teacher_subject": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TeacherSubject"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.UserAnswer": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "evaluate_teacher": {
                    "$ref": "#/definitions/models.EvaluateTeacher"
                },
                "evaluate_teacher_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "question_id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.Answer": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.UserAnswer"
                    }
                },
                "quest": {
                    "$ref": "#/definitions/models.Questionnaire"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.SubjectRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "$ref": "#/definitions/models.Major"
                },
                "name": {
                    "type": "string"
                },
                "teacher_class": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/request.TeacherSubject"
                    }
                }
            }
        },
        "request.Teacher": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.TeacherSubject": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "teacher": {
                    "$ref": "#/definitions/request.Teacher"
                }
            }
        },
        "request.UserAnswer": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "question_id": {
                    "type": "integer"
                }
            }
        },
        "response.AvailableQuestList": {
            "type": "object",
            "properties": {
                "created_by": {
                    "$ref": "#/definitions/models.User"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.Error": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "response.MessageData": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "response.MessageOnly": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.QuestList": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.QuestResponses": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Respondent"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.Respondent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "number_of_response": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "user_response": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.UserAnswer"
                    }
                }
            }
        },
        "response.Student": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "$ref": "#/definitions/models.Major"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                }
            }
        },
        "response.Subject": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "$ref": "#/definitions/models.Major"
                },
                "name": {
                    "type": "string"
                },
                "student": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Student"
                    }
                },
                "teacher_class": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeacherClass"
                    }
                }
            }
        },
        "response.SubjectTeacher": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "subject": {
                    "$ref": "#/definitions/response.SubjectWithoutTeacher"
                }
            }
        },
        "response.SubjectWithStudent": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "$ref": "#/definitions/models.Major"
                },
                "name": {
                    "type": "string"
                },
                "student": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Student"
                    }
                }
            }
        },
        "response.SubjectWithTeacher": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "$ref": "#/definitions/models.Major"
                },
                "name": {
                    "type": "string"
                },
                "teacher_class": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.TeacherClass"
                    }
                }
            }
        },
        "response.SubjectWithoutTeacher": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "major": {
                    "$ref": "#/definitions/models.Major"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.Teacher": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "response.TeacherClass": {
            "type": "object",
            "properties": {
                "class": {
                    "type": "string"
                },
                "teacher": {
                    "$ref": "#/definitions/response.Teacher"
                }
            }
        },
        "response.UserAnswer": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "question_id": {
                    "type": "integer"
                },
                "user": {
                    "$ref": "#/definitions/response.UserList"
                }
            }
        },
        "response.UserDetails": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "$ref": "#/definitions/models.Level"
                },
                "major": {
                    "$ref": "#/definitions/models.Major"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "subject": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Subject"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "teacher_subject": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.SubjectTeacher"
                    }
                }
            }
        },
        "response.UserList": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "level": {
                    "$ref": "#/definitions/models.Level"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKey": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Question Board",
	Description:      "server API for Question Board Application.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
