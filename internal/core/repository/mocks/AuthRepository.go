// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	models "go-question-board/internal/core/models"

	mock "github.com/stretchr/testify/mock"

	request "go-question-board/internal/core/models/request"
)

// AuthRepository is an autogenerated mock type for the AuthRepository type
type AuthRepository struct {
	mock.Mock
}

// Login provides a mock function with given fields: _a0
func (_m *AuthRepository) Login(_a0 request.LoginRequest) (models.UserModel, error) {
	ret := _m.Called(_a0)

	var r0 models.UserModel
	if rf, ok := ret.Get(0).(func(request.LoginRequest) models.UserModel); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(models.UserModel)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(request.LoginRequest) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RefreshToken provides a mock function with given fields: _a0
func (_m *AuthRepository) RefreshToken(_a0 models.TokenModel) (models.TokenModel, error) {
	ret := _m.Called(_a0)

	var r0 models.TokenModel
	if rf, ok := ret.Get(0).(func(models.TokenModel) models.TokenModel); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(models.TokenModel)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.TokenModel) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
