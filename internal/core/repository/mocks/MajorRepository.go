// Code generated by mockery v2.10.4. DO NOT EDIT.

package mocks

import (
	models "go-question-board/internal/core/entity/models"

	mock "github.com/stretchr/testify/mock"
)

// MajorRepository is an autogenerated mock type for the MajorRepository type
type MajorRepository struct {
	mock.Mock
}

// CreateMajor provides a mock function with given fields: _a0
func (_m *MajorRepository) CreateMajor(_a0 models.Major) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Major) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteMajor provides a mock function with given fields: _a0
func (_m *MajorRepository) DeleteMajor(_a0 int) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReadMajor provides a mock function with given fields:
func (_m *MajorRepository) ReadMajor() (*[]models.Major, error) {
	ret := _m.Called()

	var r0 *[]models.Major
	if rf, ok := ret.Get(0).(func() *[]models.Major); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]models.Major)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateMajor provides a mock function with given fields: _a0
func (_m *MajorRepository) UpdateMajor(_a0 models.Major) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Major) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
